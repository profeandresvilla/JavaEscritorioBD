/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.formularios;

import com.mycompany.clases.Datos;
import com.mycompany.clases.Opcion;
import com.mycompany.clases.Reporte;
import com.mycompany.clases.Utilidades;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author juanzuluaga
 */
public class frmReporteFacturas extends javax.swing.JInternalFrame {

    private Datos misDatos;

    public void setDatos(Datos misDatos) {
        this.misDatos = misDatos;
    }

    public frmReporteFacturas() {
        initComponents();

        // Agrupos los botones para que sean excluyentes
        bgrTipo.add(rbtTodo);
        bgrTipo.add(rbtSeleccion);

        bgrFiltro.add(rbtFecha);
        bgrFiltro.add(rbtFactura);
        bgrFiltro.add(rbtCliente);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgrFiltro = new javax.swing.ButtonGroup();
        bgrTipo = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtArchivo = new javax.swing.JTextField();
        btnSeleccionArchivo = new javax.swing.JButton();
        rbtTodo = new javax.swing.JRadioButton();
        rbtFactura = new javax.swing.JRadioButton();
        rbtCliente = new javax.swing.JRadioButton();
        rbtFecha = new javax.swing.JRadioButton();
        rbtSeleccion = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dchFechaInicial = new com.toedter.calendar.JDateChooser();
        dchFechaFinal = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbFacturaFinal = new javax.swing.JComboBox();
        cmbFacturaInicial = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox();
        btnGenerar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Reporte Facturas");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setText("Archivo:");

        txtArchivo.setText("Reporte");

        btnSeleccionArchivo.setText("...");
        btnSeleccionArchivo.setToolTipText("");
        btnSeleccionArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionArchivoActionPerformed(evt);
            }
        });

        rbtTodo.setSelected(true);
        rbtTodo.setText("Todas");
        rbtTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTodoActionPerformed(evt);
            }
        });

        rbtFactura.setText("Número de Factura");
        rbtFactura.setEnabled(false);
        rbtFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFacturaActionPerformed(evt);
            }
        });

        rbtCliente.setText("Cliente");
        rbtCliente.setEnabled(false);
        rbtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtClienteActionPerformed(evt);
            }
        });

        rbtFecha.setSelected(true);
        rbtFecha.setText("Fecha");
        rbtFecha.setEnabled(false);
        rbtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFechaActionPerformed(evt);
            }
        });

        rbtSeleccion.setText("Selección");
        rbtSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSeleccionActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha inicial:");

        jLabel3.setText("Fecha final:");

        dchFechaInicial.setEnabled(false);

        dchFechaFinal.setEnabled(false);

        jLabel4.setText("Factura inicial:");

        jLabel5.setText("Factura final:");

        cmbFacturaFinal.setEnabled(false);

        cmbFacturaInicial.setEnabled(false);

        jLabel7.setText("Cliente:");

        cmbCliente.setEnabled(false);

        btnGenerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Reporte2.png"))); // NOI18N
        btnGenerar.setText("Generar Reporte");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSeleccionArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(rbtFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtFactura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbtCliente))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbFacturaFinal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbFacturaInicial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dchFechaFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dchFechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(rbtTodo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtSeleccion)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerar)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSeleccionArchivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtTodo)
                    .addComponent(rbtSeleccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtFactura)
                    .addComponent(rbtCliente)
                    .addComponent(rbtFecha))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(dchFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dchFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbFacturaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbFacturaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(btnGenerar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTodoActionPerformed
        habilitarCampos();
    }//GEN-LAST:event_rbtTodoActionPerformed

    private void habilitarCampos() {
        if (rbtTodo.isSelected()) {
            rbtFecha.setEnabled(false);
            rbtFactura.setEnabled(false);
            rbtCliente.setEnabled(false);

            dchFechaInicial.setEnabled(false);
            dchFechaFinal.setEnabled(false);

            cmbCliente.setEnabled(false);

            cmbFacturaInicial.setEnabled(false);
            cmbFacturaInicial.setEnabled(false);
        } else {
            rbtFecha.setEnabled(true);
            rbtFactura.setEnabled(true);
            rbtCliente.setEnabled(true);

            if (rbtFecha.isSelected()) {
                dchFechaInicial.setEnabled(true);
                dchFechaFinal.setEnabled(true);

                cmbCliente.setEnabled(false);

                cmbFacturaInicial.setEnabled(false);
                cmbFacturaFinal.setEnabled(false);
            }

            if (rbtFactura.isSelected()) {
                dchFechaInicial.setEnabled(false);
                dchFechaFinal.setEnabled(false);

                cmbCliente.setEnabled(false);

                cmbFacturaInicial.setEnabled(true);
                cmbFacturaFinal.setEnabled(true);
            }

            if (rbtCliente.isSelected()) {
                dchFechaInicial.setEnabled(false);
                dchFechaFinal.setEnabled(false);

                cmbCliente.setEnabled(true);

                cmbFacturaInicial.setEnabled(false);
                cmbFacturaFinal.setEnabled(false);
            }
        }
    }

    private void rbtSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSeleccionActionPerformed
        habilitarCampos();
    }//GEN-LAST:event_rbtSeleccionActionPerformed

    private void rbtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFechaActionPerformed
        habilitarCampos();
    }//GEN-LAST:event_rbtFechaActionPerformed

    private void rbtFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFacturaActionPerformed
        habilitarCampos();
    }//GEN-LAST:event_rbtFacturaActionPerformed

    private void rbtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtClienteActionPerformed
        habilitarCampos();
    }//GEN-LAST:event_rbtClienteActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        if (txtArchivo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar o seleccionar un nombre de archivo");
            return;
        }
        try {
            String archivo = txtArchivo.getText() + ".pdf";
            String sql = "SELECT factura.idFactura, factura.idCliente, "
                    + "CONCAT(nombres, ' ', apellidos) AS nombreFull, "
                    + "fecha, idLinea, idProducto, descripcion, precio, "
                    + "cantidad,  precio * cantidad AS valor "
                    + "FROM factura "
                    + "INNER JOIN clientes ON factura.idCliente = clientes.idCliente "
                    + "INNER JOIN detalleFactura ON factura.idFactura = detalleFactura.idFactura ";
            String filtro = "";

            if (rbtTodo.isSelected()) {
                filtro = "";
            } else {
                if (rbtCliente.isSelected()) {
                    if (cmbCliente.getSelectedIndex() == 0) {
                        JOptionPane.showMessageDialog(null, "Debe seleccionar un cliente");
                        cmbCliente.requestFocusInWindow();
                        return;
                    }
                    filtro = "WHERE factura.idCliente = '"
                            + ((Opcion) cmbCliente.getSelectedItem()).getValor() + "'";
                }
                if (rbtFactura.isSelected()) {
                    if (cmbFacturaInicial.getSelectedIndex() == 0) {
                        JOptionPane.showMessageDialog(null, "Debe seleccionar una factura inicial");
                        cmbFacturaInicial.requestFocusInWindow();
                        return;
                    }
                    if (cmbFacturaFinal.getSelectedIndex() == 0) {
                        JOptionPane.showMessageDialog(null, "Debe seleccionar una factura final");
                        cmbFacturaFinal.requestFocusInWindow();
                        return;
                    }
                    filtro = "WHERE factura.idFactura >= "
                            + ((Opcion) cmbFacturaInicial.getSelectedItem()).getValor()
                            + " and factura.idFactura <= "
                            + ((Opcion) cmbFacturaFinal.getSelectedItem()).getValor();
                }
                if (rbtFecha.isSelected()) {
                    if (dchFechaInicial.getDate() == null) {
                        JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha inicial");
                        dchFechaInicial.requestFocusInWindow();
                        return;
                    }
                    if (dchFechaFinal.getDate() == null) {
                        JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha final");
                        dchFechaFinal.requestFocusInWindow();
                        return;
                    }
                    filtro = "WHERE fecha >= '"
                            + Utilidades.formatDate(dchFechaInicial.getDate())
                            + "' and fecha <= '"
                            + Utilidades.formatDate(dchFechaFinal.getDate()) + "'";
                }
            }

            // Adicionamos el filtro ala consulta
            sql = sql + filtro;

            Reporte.reporteFacturas(archivo, misDatos.getConsulta(sql));
            JOptionPane.showMessageDialog(null, "Reporte generado");
        } catch (Exception ex) {
            Logger.getLogger(frmReporteFacturas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
            // Cargamos clientes
            Opcion opc = new Opcion("NA", "Seleccione un cliente...");
            cmbCliente.addItem(opc);
            ResultSet rsCli = misDatos.getClientes();
            while (rsCli.next()) {
                opc = new Opcion(
                        rsCli.getString("idCliente"),
                        rsCli.getString("nombres") + " "
                        + rsCli.getString("apellidos"));
                cmbCliente.addItem(opc);
            }

            // Cargamos facturas
            opc = new Opcion("NA", "Seleccione una factura...");
            cmbFacturaInicial.addItem(opc);
            cmbFacturaFinal.addItem(opc);
            ResultSet rsFac = misDatos.getFacturas();
            while (rsFac.next()) {
                opc = new Opcion(
                        rsFac.getString("idFactura"),
                        rsFac.getString("idFactura"));
                cmbFacturaInicial.addItem(opc);
                cmbFacturaFinal.addItem(opc);
            }

        } catch (SQLException ex) {
            Logger.getLogger(frmFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnSeleccionArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionArchivoActionPerformed
        frmSelectorArchivo miArchivo = new frmSelectorArchivo(null, closable);
        miArchivo.setLocationRelativeTo(null);
        miArchivo.setVisible(true);
        String archivo = miArchivo.getArchivo();
        if (!archivo.equals("")) {
            txtArchivo.setText(archivo);
        }
    }//GEN-LAST:event_btnSeleccionArchivoActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrFiltro;
    private javax.swing.ButtonGroup bgrTipo;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnSeleccionArchivo;
    private javax.swing.JComboBox cmbCliente;
    private javax.swing.JComboBox cmbFacturaFinal;
    private javax.swing.JComboBox cmbFacturaInicial;
    private com.toedter.calendar.JDateChooser dchFechaFinal;
    private com.toedter.calendar.JDateChooser dchFechaInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JRadioButton rbtCliente;
    private javax.swing.JRadioButton rbtFactura;
    private javax.swing.JRadioButton rbtFecha;
    private javax.swing.JRadioButton rbtSeleccion;
    private javax.swing.JRadioButton rbtTodo;
    private javax.swing.JTextField txtArchivo;
    // End of variables declaration//GEN-END:variables
}
