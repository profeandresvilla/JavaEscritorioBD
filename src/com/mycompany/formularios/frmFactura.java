/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.formularios;

import com.mycompany.clases.Datos;
import com.mycompany.clases.Opcion;
import com.mycompany.clases.Producto;
import com.mycompany.clases.Utilidades;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import sun.swing.table.DefaultTableCellHeaderRenderer;

/**
 *
 * @author juanzuluaga
 */
public class frmFactura extends javax.swing.JInternalFrame {

    private Datos misDatos;
    private DefaultTableModel miTabla;

    public void setDatos(Datos misDatos) {
        this.misDatos = misDatos;
    }

    public frmFactura() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbProducto = new javax.swing.JComboBox();
        btnBuscarCliente = new javax.swing.JButton();
        btnBuscarProducto = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEliminarTodo = new javax.swing.JButton();
        btnGrabar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalle = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtTotalCantidad = new javax.swing.JTextField();
        txtTotalValor = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Nueva Factura");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setText("Fecha:");

        txtFecha.setEnabled(false);

        jLabel2.setText("Cliente:");

        jLabel3.setText("Producto:");

        btnBuscarCliente.setText("...");
        btnBuscarCliente.setToolTipText("Busca un cliente");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        btnBuscarProducto.setText("...");
        btnBuscarProducto.setToolTipText("Busca un producto");
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        jLabel4.setText("Cantidad:");

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/adicionar.png"))); // NOI18N
        btnAdicionar.setToolTipText("Adiciona producto a la factura");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar.png"))); // NOI18N
        btnEliminar.setToolTipText("Elimina producto de la factura");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEliminarTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Borrar2.png"))); // NOI18N
        btnEliminarTodo.setToolTipText("Elimina todos los productos de la factura");
        btnEliminarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTodoActionPerformed(evt);
            }
        });

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Aceptar2.png"))); // NOI18N
        btnGrabar.setToolTipText("Graba la factura");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        tblDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDetalle);

        jLabel5.setText("Totales:");

        txtTotalCantidad.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalCantidad.setEnabled(false);

        txtTotalValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalValor.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cmbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalValor, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdicionar, btnEliminar, btnEliminarTodo, btnGrabar});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtTotalCantidad, txtTotalValor});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(btnAdicionar)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar)
                    .addComponent(btnEliminarTodo)
                    .addComponent(btnGrabar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTotalCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
            // Cargamos clientes
            Opcion opc = new Opcion("NA", "Seleccione un cliente...");
            cmbCliente.addItem(opc);
            ResultSet rsCli = misDatos.getClientes();
            while (rsCli.next()) {
                opc = new Opcion(
                        rsCli.getString("idCliente"),
                        rsCli.getString("nombres") + " "
                        + rsCli.getString("apellidos"));
                cmbCliente.addItem(opc);
            }

            // Cargamos productos
            opc = new Opcion("NA", "Seleccione un producto...");
            cmbProducto.addItem(opc);
            ResultSet rsPro = misDatos.getProductos();
            while (rsPro.next()) {
                opc = new Opcion(
                        rsPro.getString("idProducto"),
                        rsPro.getString("descripcion"));
                cmbProducto.addItem(opc);
            }

            // Colocamos fecha del sistema
            txtFecha.setText(Utilidades.formatDate(new Date()));
            // Mostramos totales en ceros
            txtTotalCantidad.setText("0");
            txtTotalValor.setText("0");
            // Formateamos la tabla
            llenarTabla();
        } catch (SQLException ex) {
            Logger.getLogger(frmFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        if (cmbProducto.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe seleccionar un producto");
            cmbProducto.requestFocusInWindow();
            return;
        }

        if (txtCantidad.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe digitar una cantidad");
            txtCantidad.requestFocusInWindow();
            return;
        }

        if (!Utilidades.isNumeric(txtCantidad.getText())) {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe digitar un valor numérico");
            txtCantidad.setText("");
            txtCantidad.requestFocusInWindow();
            return;
        }

        int cantidad = Integer.parseInt(txtCantidad.getText());
        if (cantidad <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Debe digitar un valor mayor cero");
            txtCantidad.setText("");
            txtCantidad.requestFocusInWindow();
            return;
        }

        // Buscamos los datos del producto seleccionado
        Producto miProducto =
                misDatos.getProducto(((Opcion) cmbProducto.getSelectedItem()).getValor());

        // Adicionamos producto a la tabla
        String registro[] = new String[5];
        registro[0] = miProducto.getIdProducto();
        registro[1] = miProducto.getDescripcion();
        registro[2] = "" + miProducto.getPrecio();
        registro[3] = "" + cantidad;
        registro[4] = "" + (cantidad * miProducto.getPrecio());
        miTabla.addRow(registro);

        // Inicializamos campos
        cmbProducto.setSelectedIndex(0);
        txtCantidad.setText("");
        cmbProducto.requestFocusInWindow();

        //Actualizamos totales
        totales();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        if (cmbCliente.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe seleccionar un cliente");
            cmbCliente.requestFocusInWindow();
            return;
        }

        int totCan = new Integer(txtTotalCantidad.getText());
        if (totCan == 0) {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar detalle de la factura");
            cmbProducto.requestFocusInWindow();
            return;
        }

        int rta = JOptionPane.showConfirmDialog(rootPane,
                "Esta seguro de grabar esta factura");
        if (rta != 0) {
            return;
        }

        // Adicionamos un consecutivo a la factura
        int numFac = misDatos.getNumFac();

        // Encabezado de factura
        misDatos.agregarFactura(
                numFac,
                ((Opcion) cmbCliente.getSelectedItem()).getValor(),
                new Date());

        // Detalle de factura
        int num = tblDetalle.getRowCount();
        for (int i = 0; i < num; i++) {
            misDatos.agregarDetalleFactura(
                    numFac,
                    i,
                    Utilidades.objectToString(tblDetalle.getValueAt(i, 0)),
                    Utilidades.objectToString(tblDetalle.getValueAt(i, 1)),
                    Utilidades.objectToInt(tblDetalle.getValueAt(i, 2)),
                    Utilidades.objectToInt(tblDetalle.getValueAt(i, 3)));
        }

        JOptionPane.showMessageDialog(rootPane,
                "Factura: " + numFac + " generada con exito");

        // Inicializamos campos
        cmbCliente.setSelectedIndex(0);
        limpiarTabla();
        totales();
        cmbCliente.requestFocusInWindow();
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnEliminarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTodoActionPerformed
        int rta = JOptionPane.showConfirmDialog(rootPane,
                "Esta seguro de borrar el detalle de la factura");
        if (rta != 0) {
            return;
        }
        limpiarTabla();
        totales();
    }//GEN-LAST:event_btnEliminarTodoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (cmbProducto.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe seleccionar un producto");
            cmbProducto.requestFocusInWindow();
            return;
        }

        try {
            DefaultTableModel modelo = (DefaultTableModel) tblDetalle.getModel();
            int filas = tblDetalle.getRowCount();
            for (int i = 0; filas > i; i++) {
                String idTabla = Utilidades.objectToString(tblDetalle.getValueAt(i, 0));
                String idCombo = ((Opcion) cmbProducto.getSelectedItem()).getValor();
                if (idTabla.equals(idCombo)) {
                    modelo.removeRow(i);
                    //Actualizamos totales
                    totales();
                    return;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        frmBusquedaCliente miBusqueda = new frmBusquedaCliente(null, closable);
        miBusqueda.setDatos(misDatos);
        miBusqueda.setLocationRelativeTo(null);
        miBusqueda.setVisible(true);
        String rta = miBusqueda.getRespuesta();
        if (rta.equals("")) {
            return;
        }
        for (int i = 0; i < cmbCliente.getItemCount(); i++) {
            if (((Opcion) cmbCliente.getItemAt(i)).getValor().equals(rta)) {
                cmbCliente.setSelectedIndex(i);
                return;
            }
        }
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed
        frmBusquedaProducto miBusqueda = new frmBusquedaProducto(null, closable);
        miBusqueda.setDatos(misDatos);
        miBusqueda.setLocationRelativeTo(null);
        miBusqueda.setVisible(true);
        String rta = miBusqueda.getRespuesta();
        if (rta.equals("")) {
            return;
        }
        for (int i = 0; i < cmbProducto.getItemCount(); i++) {
            if (((Opcion) cmbProducto.getItemAt(i)).getValor().equals(rta)) {
                cmbProducto.setSelectedIndex(i);
                return;
            }
        }
    }//GEN-LAST:event_btnBuscarProductoActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarTodo;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JComboBox cmbCliente;
    private javax.swing.JComboBox cmbProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDetalle;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtTotalCantidad;
    private javax.swing.JTextField txtTotalValor;
    // End of variables declaration//GEN-END:variables

    private void llenarTabla() {
        String titulos[] = {"ID Producto", "Descripción", "Precio", "Cantidad",
            "Valor"};
        miTabla = new DefaultTableModel(null, titulos);
        tblDetalle.setModel(miTabla);

        // Alinear campos numéricos a la derecha
        DefaultTableCellRenderer tcr = new DefaultTableCellHeaderRenderer();
        tcr.setHorizontalAlignment(SwingConstants.RIGHT);
        tblDetalle.getColumnModel().getColumn(2).setCellRenderer(tcr);
        tblDetalle.getColumnModel().getColumn(3).setCellRenderer(tcr);
        tblDetalle.getColumnModel().getColumn(4).setCellRenderer(tcr);
    }

    private void totales() {
        int num = tblDetalle.getRowCount();
        int sumCan = 0, sumVal = 0;
        for (int i = 0; i < num; i++) {
            sumCan += Utilidades.objectToInt(tblDetalle.getValueAt(i, 3));
            sumVal += Utilidades.objectToInt(tblDetalle.getValueAt(i, 4));
        }
        txtTotalCantidad.setText("" + sumCan);
        txtTotalValor.setText("" + sumVal);
    }

    public void limpiarTabla() {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tblDetalle.getModel();
            int filas = tblDetalle.getRowCount();
            for (int i = 0; filas > i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}